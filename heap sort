#include<stdio.h>
int* heapsort(int* nums, int N) {
	int N;
	int i, j, c, heap_root, temp;
	N = sizeof(nums) / sizeof(int);
	for (i = 1; i < N; i++)
	{
		c = i;
		do
		{
			heap_root = (c - 1) / 2;
			/* to create MAX arr  array */
			if (nums[heap_root] < nums[c])
			{
				temp = nums[heap_root];
				nums[heap_root] = nums[c];
				nums[c] = temp;
			}
			c = heap_root;
		} while (c != 0);
	}

	//printf("Heap  array : ");
	for (j = N - 1; j >= 0; j--)
	{
		temp = nums[0];
		nums[0] = nums[j];
		nums[j] = temp;
		heap_root = 0;
		do
		{
			c = 2 * heap_root + 1;
			if ((nums[c] < nums[c + 1]) && c < j - 1)
				c++;
			if (nums[heap_root] < nums[c] && c < j)
			{
				temp = nums[heap_root];
				nums[heap_root] = nums[c];
				nums[c] = temp;
			}
			heap_root = c;
		} while (c < j);
	}
	//printf("\nSorted  array : ");
	//for (i = 0; i < N; i++)
	//	printf("\t%d", nums[i]);
	//printf("\n");
	return nums;
}
int main()
{
	int nums[10]={ 21, 10, 12, 20, 25, 13, 15, 22 };
	int N;
	int i, j, c, heap_root, temp;
	N = sizeof(nums) / sizeof(int);
	heapsort(nums, N);
}
/*
int main() {
	int nums[] = { 7,6,5,8,3,5,9,1,6 };
	int N = sizeof(nums) / sizeof(int);
	int c;
	//heapify
	for (int i = 1; i < N; i++) {
		c = i;

	}
}*/
