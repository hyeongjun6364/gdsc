#include<stdio.h>
void quicksort(int* nums, int start, int N) {
	//분할된 원소가 0개이거나 1개 일때까지 함수 호출 
	if (start >= N) {
		return;
	}

	int pivot = start;	//피봇은 첫 번째 원소 
	int i = pivot + 1;	//i는 피봇 다음원소 
	int j = N;	//j는 마지막 원소 
	int temp;

	while (i <= j) {
		//피봇 보다 큰 값 만날 때 까지
		while (i <= N && nums[i] <= nums[pivot]) {
			++i;
		}
		//피봇 보다 작은 값 만날 때 까지
		while (j > start && nums[j] >= nums[pivot]) {
			++j;

		}

		//위에서 계산된 i와 j가 만나거나 엇갈리면 종료
		if (i >= j) break;

		//두 원소 교환 
		temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}

	//피봇 정렬 완료 
	temp = nums[j];
	nums[j] = nums[pivot];
	nums[pivot] = temp;

	quicksort(nums, start, j - 1);	//피봇 중심으로 왼쪽부분 분할
	quicksort(nums, j + 1, N);	//피봇 중심으로 오른쪽부분 분할

}
int main() {
	int nums[] = { 31,3,65,73,8,11,20,29,48,15 };
	const int N = sizeof(nums) / sizeof(int);
	int pivot[9];
	int i=0, j=0;
	int temp;
	
	quicksort(nums, 0, N-1);
	for(int i=0;i<N;i++)
		printf("%d ", nums[i]);
}
